<style>
  .checkbox label::before {
    content: "";
    margin-top: 20px;
    transform: scale(1.5);
  }
  .checkbox label::after {
    top: 19px;
    font-size: 21px;
  }
  h3, .h3 {
    font-size: 1.825em;
    line-height: 2.2 !important;
  }
  .form-group {
    margin-bottom: 0 !important;
  }

   .list-inline>li {
     padding-right: 0 !important;
     padding-left: 0 !important;
   }
  .fa-1d3x {
    font-size: 1.3em;
  }
</style>
<script>
  let esId = {{session.currentEs}};
  let list = [{{#each posts as |post|}}"{{{post.name}}}",{{/each}}];
  let need = { selectedCandidates: [], favoriteCandidates: []};
</script>
<div class="row">
  <div class="col-md-offset-2 col-md-8 col-sm-12">
    <div class="form-group">
      <div class="searchbar-wrapper">
        <div style="border: 1px solid #DDD" class="searchbar-wrapper-input">
          <input placeholder="Indiquez le profil recherché" style="border: 0px" id="post" type="text"
                 class="form-control pull-left" autocomplete="off">
        </div>
        <button style="position: absolute;right: 25px;top:10px" id="searchCandidates" class="btn btn-large btn-primary">
          Rechercher
        </button>
      </div>
    </div>
  </div>
  <div class="col-md-2 col-sm-12" style="padding: 10px">
    <button onclick="resetSearch()" class="btn btn-warning pull-left btn">
      Réinitialiser
    </button>
  </div>
</div>
<div class="row">
  <div class="col-md-12" id="criteria" style="display: none; padding-top: 15px;">
    <div class="col-md-12 text-center">
      <button class="btn btn-info" data-toggle="modal" data-target="#contractType" data-backdrop="static" data-keyboard="false">
        Type de Contrat : <span id="btnContractType"></span>
      </button>
      <button class="btn btn-info" data-toggle="modal" data-target="#timeType" data-backdrop="static" data-keyboard="false">
       Période : <span id="btnTimeType"></span>
      </button>
      <button id="saveNeed" class="btn btn-success">
        <i class="fal fa-save"></i> Enregistrer le besoin
      </button>
    </div>
  </div>
</div>
<div class="row" style="padding-top: 30px">
  <div id="baseResult" class="col-md-12">
    {{#each candidates as |data|}}
      {{#unless data.Establishment.ArchivedCandidates.0.candidate_id}}
        <div class="col-md-3" data-card-user="{{data.Wish.Candidate.id}}">
          <div class="card card-user">
            <div class="image">
              <div class="pull-left">
                <span class="{{#unless data.Wish.Candidate.is_available}}un{{/unless}}available pull-left"></span>
                <span class="pull-right" style="margin: 5px">
            <i class="selectCandidate fal fa-square fa-1d3x" data-id="{{data.Wish.Candidate.id}}" onclick="addCandidate({{data.Wish.Candidate.id}}, 'select')" style="cursor: pointer;"></i>
            <i class="unselectCandidate fal fa-check-square fa-1d3x" data-id="{{data.Wish.Candidate.id}}" onclick="removeCandidate({{data.Wish.Candidate.id}}, 'unselect')" style="display:none;cursor: pointer; color: #35e035"></i>
          </span>
              </div>
              <div class="actions pull-right">
                <ul class="list-inline">
                  <li>
                    <i class="fal fa-archive fa-1d3x" onclick="addCandidate({{data.Wish.Candidate.id}}, 'archive')"
                       style="cursor: pointer"></i>
                  </li>
                  <li>
                    <i class="fal fa-star favCandidate fa-1d3x" data-id="{{data.Wish.Candidate.id}}"
                       title="Ajouté par {{data.Establishment.FavoriteCandidates.0.User.firstName}} {{data.Establishment.FavoriteCandidates.0.User.lastName}}"
                      {{#if data.Establishment.FavoriteCandidates.0.candidate_id}}
                       onclick="removeCandidate({{data.Wish.Candidate.id}}, 'unfav')" style="cursor: pointer; color: gold"
                      {{else}}
                       onclick="addCandidate({{data.Wish.Candidate.id}}, 'favorite')" style="cursor: pointer"
                      {{/if}}>
                    </i>
                  </li>
                </ul>
              </div>
            </div>
            <div class="content">
              <div class="author">
                <img id="candidateAvatar" class="avatar border-blue" src="/static/assets/images/face-0.jpg" />
                <div class="rank-label-container">
                  <span class="label label-default rank-label">{{{candidateProfilePercentage data.Wish.Candidate}}}</span>
                </div>
                <h6>
            <span class="text-{{#unless data.Wish.Candidate.is_available}}un{{/unless}}available" style="line-height: 1.8">
              {{#if data.Wish.Candidate.is_available}}Disponible{{else}} Indisponible{{/if}}
            </span>
                </h6>
                <h5 class="title">{{data.Wish.Candidate.User.firstName}} {{data.Wish.Candidate.User.lastName}},
                  <small>{{age data.Wish.Candidate.User.birthday 'years'}} ans</small>,
                  <small><b><i class="fal fa-map-marker-alt"></i> {{data.Wish.Candidate.User.town}}</b></small>
                </h5>
                <h5 class="text-muted">
                  <i class="fal fa-sun"{{#if data.Wish.day_time}} style="color: #04e900"{{/if}}></i>
                  <i class="fal fa-moon"{{#if data.Wish.night_time}} style="color: #04e900"{{/if}}></i>
                </h5>
              </div>
              <div class="text-center">
                <div class="row">
                  <div class="col-md-12"><button class="btn btn-info" onclick="showCandidateProfile({{data.Wish.Candidate.User.id}})">Accéder au profil complet</button></div>
                  <div class="col-md-12">
                    <p class="text-muted"><small>Inscrit le {{date data.createdAt 'DD/MM/YYYY'}}</small></p>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
        <script>
            {{#if data.Establishment.FavoriteCandidates.0.candidate_id}}
            if (need.favoriteCandidates.indexOf({{this.candidate_id}}) === -1)
              need.favoriteCandidates.push({{this.candidate_id}});
            {{/if}}
        </script>
      {{/unless}}
    {{/each}}
    {{#unless candidates}}
      <h3>Aucun candidats n'a encore postuler dans votre établissement.</h3>
    {{/unless}}
  </div>
  <div id="searchResult" class="col-md-12" style="display:none"></div>
</div>
<div class="modal modal-xs fade" id="candidateProfileModal" tabindex="-1" role="dialog" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">Profile de</div>
      <div class="modal-body" id="candidateProfileModalBody"></div>
      <div class="modal-footer">Fermer</div>
    </div>
  </div>
</div>
<script async defer
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBMyQuBw8EQ6YixI2_Fxbw_OSmyVnnVocI&libraries=places"></script>
<script>
  need.firstSearch = true;
  need.notifyCandidates = false;
  $(`#post`).autocomplete({
    source: list,
    minLength: 2,
    select: (event, ui) => {
      need.post = ui.item.label;
      if (need.firstSearch) {
        createModal({
          id: 'contractType',
          modal: 'addNeed-ContractType',
          cantBeClose: true,
          title: 'Type de contrat souhaité',
        }, () => {
          $('#criteria').show();
        });
      } else return searchCandidates();
    },
  });

  $('#searchCandidates').on('click', function() {
    need.post = $('input#post').val();
    searchCandidates();
  });

  $('input#post').on('keydown', function(e) {
    if (e.which === 13) {
      e.preventDefault();
      need.post = $('input#post').val();
      searchCandidates();
    }
  });

  let searchCandidates = () => {
    if ($('input#post').val().length < 2) {
      return false;
    }
    need.post = need.post || $('input#post').val();
    if (need.firstSearch) {
      createModal({
        id: 'contractType',
        modal: 'addNeed-ContractType',
        cantBeClose: true,
        title: 'Type de contrat souhaité',
      }, () => {
        $('#criteria').show();
      });
    } else {
      $.post(`/api/es/${esId}/search/candidates`, need, (data) => {
        loadTemplate('/static/views/api/searchCandidates.hbs', data, html => {
          $('#searchResult').html(html).show();
          $('#baseResult').hide();
        });
      }).catch(error => errorsHandler(error));
    }
  };

  let resetSearch = () => {
    $('input#post').val('');
    $('#searchResult').empty().hide();
    $('#baseResult').show();
    $('#btnContractType').empty();
    $('#btnTimeType').empty();
    need.firstSearch = true;
    delete need.post;
    delete need.contractType;
    delete need.timeType;
  };

  let addCandidate = (id, type) => {
    id = parseInt(id);
    switch (type) {
      case 'select':
        if (need.selectedCandidates.indexOf(id) === -1) {
          $(`i.selectCandidate[data-id="${id}"]`).hide();
          $(`i.unselectCandidate[data-id="${id}"]`).show();
          need.selectedCandidates.push(id);
          /*$('#selectedEsCount').html(need.selectedCandidates.length);
          $('#es_selected').append($(`#es${id}`).clone().attr('class', 'col-md-3'));*/
        }
        break;
        case 'favorite':
          if (need.favoriteCandidates.indexOf(id) === -1) {
            $(`i.favCandidate[data-id="${id}"]`).css('color', 'gold').attr('onclick', `removeCandidate(${id}, 'unfav')`);
            need.favoriteCandidates.push(id);
            $.post(`/api/es/${esId}/candidate/${id}/fav/`, { _csrf }, (data) => {
              if (data.status === 'Created') {
                notification({
                  icon: 'check-circle',
                  type: 'success',
                  title: 'Candidat ajouté au favoris.'
                })
              } else {
                notification({
                  icon: 'exclamation-circle',
                  type: 'warning',
                  title: 'Ce candidat est déjà dans vos favoris.'
                })
              }
            });
          }
          break;
        case 'archive':
          createModal({
            id: 'archivateCandidateModal',
            modal: 'es/showArchivateCandidate',
            title: 'Archiver un candidat',
          }, () => {
            $('#archivateCandidate').click(function() {
              $('#archivateCandidateModal').modal('hide');
              $.post(`/api/es/${esId}/candidate/${id}/archive/`, { _csrf }, (data) => {
                $(`div[data-card-user="${id}"]`).remove();
                if (data.status === 'Created') {
                  notification({
                    icon: 'check-circle',
                    type: 'success',
                    title: 'Candidat archivé avec succès.'
                  })
                } else {
                  notification({
                    icon: 'exclamation-circle',
                    type: 'warning',
                    title: 'Ce candidat est déjà archivé.'
                  })
                }
              });
            });
          });
        break;
    }
  };

  let removeCandidate = (id, type) => {
    id = parseInt(id);
    let index;
    switch (type) {
      case 'unselect':
        index = need.selectedCandidates.indexOf(id);
        if (index !== -1) {
          $(`i.unselectCandidate[data-id="${id}"]`).hide();
          $(`i.selectCandidate[data-id="${id}"]`).show();
          need.selectedCandidates.splice(index, 1);
          /* $('#selectedEsCount').html(need.selectedCandidates.length);
           $(`#es_selected > #es${id}`).remove();*/
        }
        break;
        case 'unfav':
          index = need.favoriteCandidates.indexOf(id);
          if (index !== -1) {
            $(`i.favCandidate[data-id="${id}"]`).css('color', 'inherit').attr('onclick', `addCandidate(${id}, 'favorite')`);
            need.favoriteCandidates.splice(index, 1);
            $.post(`/api/es/${esId}/candidate/${id}/unfav/`, { _csrf }, (data) => {
              if (data.status === 'deleted') {
                notification({
                  icon: 'check-circle',
                  type: 'success',
                  title: 'Candidat supprimé de vos favoris.'
                })
              }
            });
          }
        break;
    }
  };

  $(document).ready(() => {
    need._csrf = _csrf;

    $('button#saveNeed').click(function() {
      if (!need.firstSearch && need.post && need.contractType) {
        need._csrf = _csrf;
        $.post(`/api/es/${esId}/addNeed`, need, (data) => {
          if (data.id) {
            $(location).attr('href', `/need/${data.id}`);
          }
        });
      } else {
        console.log('error occurred : invalid search')
      }
    });
  });
</script>

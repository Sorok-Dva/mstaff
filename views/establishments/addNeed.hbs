<style>
  .checkbox label::before {
    content: "";
    margin-top: 20px;
    transform: scale(1.5);
  }

  .checkbox label::after {
    top: 19px;
    font-size: 21px;
  }

  h3, .h3 {
    font-size: 1.825em;
    line-height: 2.2 !important;
  }

  .form-group {
    margin-bottom: 0 !important;
  }

  .list-inline > li {
    padding-right: 0 !important;
    padding-left: 0 !important;
  }

  .fa-1d3x {
    font-size: 1.3em;
  }

  .card-user {
    min-height: 375px;
    margin-top: 20px;
  }

  .profile-cta {
    position: absolute;
    bottom: 0;
  }
</style>
<script>
  let esId = {{session.currentEs}};
  let list = [{{#each posts as |post|}}"{{{post.name}}}",{{/each}}];
  let need = {
    selectedCandidates: [], filterQuery: {
      establishments: [esId]
    }
  };
</script>
<div class="col-md-12">
  <h4 class="text-center">Vous avez accès à <span class="label label-primary">{{candidatesCount.0.count}}</span> professionnels au sein de votre CVthèque.</h4>
</div>
<div class="row">
  <div class="col-md-offset-2 col-md-8 col-sm-12">
    <div class="form-group">
      <div class="searchbar-wrapper">
        <div style="border: 1px solid #DDD" class="searchbar-wrapper-input">
          <input placeholder="Indiquez un type de poste" style="border: 0px" id="post" type="text"
                 class="form-control pull-left" autocomplete="off">
          <div>
            <button onclick="resetSearch()" id="resetSearch"
                    title="Réinitialiser ma recherche" class="btn btn-warning pull-right"
                    style="display: none;margin-left: 5px;">
              <i class="fal fa-undo-alt"></i>
            </button>
            <button id="saveNeed" class="btn btn-success pull-right" title="Enregistrer ma recherche"
                    style="display:none;margin-left: 5px;">
              <i class="fal fa-save"></i>
            </button>
            <button id="searchCandidates" class="btn btn-large btn-primary pull-right">
              Rechercher
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
<div class="row" style="margin-top: 15px">
  <div class="col-md-12" id="criteria">
    <div class="col-md-12 text-center">
      <button class="btn btn-info" onclick="return showServiceModal()">
        Service <span id="btnServiceType"></span>
      </button>
      <button class="btn btn-info" onclick="return showContractModal()">
        Contrat <span id="btnContractType"></span>
      </button>
      <button class="btn btn-info" onclick="return showTimeModal()">
        Période <span id="btnTimeType"></span>
      </button>
      <button class="btn btn-info" onclick="return showDiplomaModal()">
        Diplômes Complémentaires <span id="btnDiplomaType"></span>
      </button>
    </div>
  </div>
</div>
<div class="row" style="padding-top: 30px">
  <div id="baseResult" class="col-md-12">
    {{#each candidates as |data|}}
      {{#unless data.Establishment.ArchivedCandidates.0.candidate_id}}
        <div class="col-md-3" data-card-user="{{data.Wish.Candidate.id}}">
          <div class="card card-user">
            <div class="image">
              <div class="pull-left">
                <span class="pull-right" style="margin: 5px">
                  <i class="selectCandidate fal fa-square fa-1d3x" data-id="{{data.Wish.Candidate.id}}"
                     onclick="addCandidate({{data.Wish.Candidate.id}}, 'select')" style="cursor: pointer;"></i>
                  <i class="unselectCandidate fal fa-check-square fa-1d3x" data-id="{{data.Wish.Candidate.id}}"
                     onclick="removeCandidate({{data.Wish.Candidate.id}}, 'unselect')"
                     style="display:none;cursor: pointer; color: #35e035"></i>
                </span>
              </div>
              <div class="actions pull-right">
                <ul class="list-inline">
                  <li>
                    <i class="fal fa-archive fa-1d3x" onclick="addCandidate({{data.Wish.Candidate.id}}, 'archive')"
                       style="cursor: pointer"></i>
                  </li>
                  <li>
                    <i class="fal fa-star favCandidate fa-1d3x" data-id="{{data.Wish.Candidate.id}}"
                       title="Ajouté par {{data.Establishment.FavoriteCandidates.0.User.firstName}} {{data.Establishment.FavoriteCandidates.0.User.lastName}}"
                      {{#if data.Establishment.FavoriteCandidates.0.candidate_id}}
                       onclick="removeCandidate({{data.Wish.Candidate.id}}, 'unfav')"
                       style="cursor: pointer; color: gold"
                      {{else}}
                       onclick="addCandidate({{data.Wish.Candidate.id}}, 'favorite')" style="cursor: pointer"
                      {{/if}}>
                    </i>
                  </li>
                </ul>
              </div>
            </div>
            <div class="content">
              <div class="author">
                <img id="candidateAvatar" class="avatar border-blue" src="/static/assets/images/face-0.jpg"/>
                <div class="rank-label-container">
                  <span class="label label-default rank-label">{{{candidateProfilePercentage this.Wish.Candidate.percentage}}}</span>
                </div>
                <h5 class="title">{{data.Wish.Candidate.User.firstName}} {{data.Wish.Candidate.User.lastName}},
                  <small>{{age data.Wish.Candidate.User.birthday 'years'}} ans</small>,
                  <small><b><i class="fal fa-map-marker-alt"></i> {{data.Wish.Candidate.User.town}}</b></small>
                </h5>
              </div>
              <div class="text-center">
                <h6>
                  <div class="{{#unless data.Wish.Candidate.is_available}}un{{/unless}}available"></div>
                  <span class="text-{{#unless data.Wish.Candidate.is_available}}un{{/unless}}available"
                        style="line-height: 1.8">
                    {{#if data.Wish.Candidate.is_available}}Disponible{{else}} Indisponible{{/if}}
                  </span>
                </h6>
                <h5 class="text-muted">
                  <i class="fal fa-sun"{{#if data.Wish.day_time}} style="color: #04e900"{{/if}}></i>
                  <i class="fal fa-moon"{{#if data.Wish.night_time}} style="color: #04e900"{{/if}}></i>
                </h5>
                {{#if data.Wish.services}}
                  <hr style="width: 35%; margin: auto">
                  <h5 class="text-muted">
                    Intéressé(e) par les services
                  </h5>
                  <h6>
                    {{#each data.Wish.services as |service|}}
                      <div class="label label-default">{{service}}</div>
                    {{/each}}
                  </h6>
                  <hr style="width: 35%; margin: auto;">
                {{/if}}
              </div>
              <div class="col-md-12 text-center profile-cta">
                <div class="col-md-12">
                  <button class="btn btn-info" onclick="showCandidateProfile({{data.Wish.Candidate.User.id}})">Accéder
                    au profil complet
                  </button>
                </div>
                <div class="col-md-12">
                  <p class="text-muted">
                    <small>Inscrit le {{date data.createdAt 'DD/MM/YYYY'}}</small>
                  </p>
                </div>
              </div>
            </div>
          </div>
        </div>
      {{/unless}}
    {{/each}}
    {{#unless candidates}}
      <h3>Aucun candidats n'a encore postuler dans votre établissement.</h3>
    {{/unless}}
  </div>
  <div id="searchResult" class="col-md-12" style="display:none"></div>
</div>
<div class="modal modal-xs fade" id="candidateProfileModal" tabindex="-1" role="dialog" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">Profile de</div>
      <div class="modal-body" id="candidateProfileModalBody"></div>
      <div class="modal-footer">Fermer</div>
    </div>
  </div>
</div>
<select class="form-control" id="selectServiceType" data-live-search="true"
        title="Séléctionner un type de service" style="display: none">
  {{#each services as |service|}}
    <option value="{{service.id}}" data-categorie="{{service.categoriesPS_id}}">{{service.name}}</option>
  {{/each}}
</select>
<select class="form-control" id="selectDiplomaType" data-live-search="true"
        title="Séléctionner un diplôme" style="display: none">
  {{#each formations as |formation|}}
    <option value="{{formation.id}}">{{formation.name}}</option>
  {{/each}}
</select>
<script>
  need.firstSearch = true;
  need.notifyCandidates = false;
  $(`#post`).autocomplete({
    source: list,
    minLength: 2,
    select: (event, ui) => {
      need.post = ui.item.label;
      if (need.firstSearch) return showContractModal();
      else return searchCandidates();
    },
  });

  $('#searchCandidates').on('click', function () {
    need.post = $('input#post').val();
    searchCandidates();
  });

  $('input#post').on('keydown', function (e) {
    if (e.which === 13) {
      e.preventDefault();
      need.post = $('input#post').val();
      searchCandidates();
    }
  });

  let searchCandidates = () => {
    // if ($('input#post').val().length < 2) {
      if (need.filterQuery.length > 1) {
        notification({
          icon: 'exclamation',
          type: 'danger',
          title: 'Veuillez au moins saisir un nom de poste.',
        });
      }
    // }
    need.post = need.post || $('input#post').val();
    if (need.firstSearch) {
      return showContractModal();
    } else {
      $.post(`/api/es/${esId}/search/candidates`, need, (data) => {
        loadTemplate('/static/views/api/searchCandidates.hbs', data, html => {
          $('#resetSearch').show();
          $('#searchResult').html(html).show();
          $('#baseResult').hide();
        });
      }).catch(error => errorsHandler(error));
    }
  };

  let showServiceModal = () => {
    createModal({
      id: 'serviceType',
      modal: 'es/need/serviceType',
      title: 'Type de service souhaité',
    }, () => {
    });
  };

  let showContractModal = () => {
    createModal({
      id: 'contractType',
      modal: 'es/need/contractType',
      title: 'Type de contrat souhaité',
    }, () => {
    });
  };

  let showTimeModal = () => {
    createModal({
      id: 'timeType',
      modal: 'es/need/timeType',
      title: 'Période',
      contractType: need.filterQuery.contractType
    });
  };

  let showDiplomaModal = () => {
    createModal({
      id: 'diplomaType',
      modal: 'es/need/diplomaType',
      title: 'Diplôme',
    });
  };

  let resetSearch = () => {
    $('input#post').val('');
    $('#searchResult').empty().hide();
    $('#baseResult').show();
    $('#btnContractType').empty();
    $('#btnTimeType').empty();
    need.firstSearch = true;
    $('#resetSearch').hide();
  };

  let addCandidate = (id, type) => {
    id = parseInt(id);
    switch (type) {
      case 'select':
        if (need.selectedCandidates.indexOf(id) === -1) {
          if (need.selectedCandidates.length === 0) $('#saveNeed').show();
          $(`i.selectCandidate[data-id="${id}"]`).hide();
          $(`i.unselectCandidate[data-id="${id}"]`).show();
          need.selectedCandidates.push(id);
          /*$('#selectedEsCount').html(need.selectedCandidates.length);
          $('#es_selected').append($(`#es${id}`).clone().attr('class', 'col-md-3'));*/
        }
        break;
      case 'favorite':
        $(`i.favCandidate[data-id="${id}"]`).css('color', 'gold').attr('onclick', `removeCandidate(${id}, 'unfav')`);
        $.post(`/api/es/${esId}/candidate/${id}/fav/`, { _csrf }, (data) => {
          if (data.status === 'Created') {
            notification({
              icon: 'check-circle',
              type: 'success',
              title: 'Candidat ajouté au favoris.'
            })
          } else {
            notification({
              icon: 'exclamation-circle',
              type: 'warning',
              title: 'Ce candidat est déjà dans vos favoris.'
            })
          }
        });
        break;
      case 'archive':
        createModal({
          id: 'archivateCandidateModal',
          modal: 'es/showArchivateCandidate',
          title: 'Archiver un candidat',
        }, () => {
          $('#archivateCandidate').click(function () {
            $('#archivateCandidateModal').modal('hide');
            $.post(`/api/es/${esId}/candidate/${id}/archive/`, { _csrf }, (data) => {
              $(`div[data-card-user="${id}"]`).remove();
              if (data.status === 'Created') {
                notification({
                  icon: 'check-circle',
                  type: 'success',
                  title: 'Candidat archivé avec succès.'
                })
              } else {
                notification({
                  icon: 'exclamation-circle',
                  type: 'warning',
                  title: 'Ce candidat est déjà archivé.'
                })
              }
            });
          });
        });
        break;
    }
  };

  let removeCandidate = (id, type) => {
    id = parseInt(id);
    let index;
    switch (type) {
      case 'unselect':
        index = need.selectedCandidates.indexOf(id);
        if (index !== -1) {
          $(`i.unselectCandidate[data-id="${id}"]`).hide();
          $(`i.selectCandidate[data-id="${id}"]`).show();
          need.selectedCandidates.splice(index, 1);
          if (need.selectedCandidates.length === 0) $('#saveNeed').hide();
          /* $('#selectedEsCount').html(need.selectedCandidates.length);
           $(`#es_selected > #es${id}`).remove();*/
        }
        break;
      case 'unfav':
        $(`i.favCandidate[data-id="${id}"]`).css('color', 'inherit').attr('onclick', `addCandidate(${id}, 'favorite')`);
        $.post(`/api/es/${esId}/candidate/${id}/unfav/`, { _csrf }, (data) => {
          if (data.status === 'deleted') {
            notification({
              icon: 'check-circle',
              type: 'success',
              title: 'Candidat supprimé de vos favoris.'
            })
          }
        });
        break;
    }
  };

  $(document).ready(() => {
    need._csrf = _csrf;

    $('button#saveNeed').click(function () {
      createModal({
        id: 'needNameModal',
        title: 'Définir un libellé de recherche.',
        modal: 'es/need/defineName',
        cantBeClose: true
      })
    });
  });
</script>

<div class="row">

    <div class="col-md-12">
        <div class="card">
            <div class="card-content">
                <div class="toolbar">
                    <a title="Add" class="btn btn-default" style="margin-right:10px" onclick="
                    createModal({
                        id: 'addPostModal',
                        title: 'Ajouter un poste',
                        modal: 'back-office/addPost'
                    }, () => {
                        $('button#validatePost').click(function () {
                             if (($('input#postValue').val() != '') && ($('select#postCategory').val() != '')) {
                                 let _csrf = $('#csrfToken').val();
                                 let promptInput = $('input#postValue').val();
                                 let categoryInput = $('select#postCategory').val();
                                 $.post(`/api/back-office/posts/`, {
                                     promptInput,
                                     categoryInput,
                                     _csrf
                                 }, (response) => {
                                     if (response.status === 'Already exists') {
                                        notification({
                                            icon: 'exclamation',
                                            type: 'danger',
                                            title: 'Ce poste existe déjà.',
                                            message: ``
                                            });
                                    }
                                     else {
                                         table.bootstrapTable('insertRow', {
                                             index: 0,
                                             row: {
                                              id: response.post.id,
                                              name: response.post.name
                                         }
                                         })
                                     }
                                 });
                                 $('#addPostModal').modal('hide');
                             }
                             else {
                                if ($('input#postValue').val() == '') {
                                    $('input#postValue').addClass('error');
                                    setTimeout(function() {
                                        $('input#postValue').removeClass('error');
                                    }, 750)
                                }
                                if ($('select#postCategory').val() == '') {
                                    $('select#postCategory').addClass('error');
                                    setTimeout(function() {
                                        $('select#postCategory').removeClass('error');
                                    }, 750)
                                }
                             }
                        })
                    })">
                    <i class="fal fa-plus"></i></a>
                </div>

                <table id="posts-table" class="table">
                    <thead>
                    <th data-field="state" data-checkbox="true"></th>
                    <th data-field="id" class="text-center">ID</th>
                    <th data-field="name" data-sortable="true">Nom</th>
                    <th data-field="category" data-sortable="true">Categorie</th>

                    <th data-field="actions" class="td-actions text-right" data-events="operateEvents"
                        data-formatter="operateFormatter">Actions</th>
                    </thead>
                    <tbody>
                    {{#each post as |posts|}}
                        <tr data-id="{{posts.id}}">
                            <td></td>
                            <td>{{posts.id}}</td>
                            <td>{{posts.name}}</td>
                        </tr>
                    {{/each}}
                    </tbody>
                </table>
            </div>
        </div>
    </div>

</div>
<script type="text/javascript">
    let table = $('#posts-table');

    operateFormatter = (value, row, index) => {
        return [
            '<div class="table-icons">',
            '<a title="Edit" class="btn btn-simple btn-warning btn-icon table-action edit" href="javascript:void(0)">',
            '<i class="ti-pencil-alt"></i>',
            '</a>',
            '<a title="Remove" class="btn btn-simple btn-danger btn-icon table-action remove" href="javascript:void(0)">',
            '<i class="ti-close"></i>',
            '</a>',
            '</div>',
        ].join('');
    };

    $(document).ready(() => {
        window.operateEvents = {
            'click .edit': (e, value, row, index) => {
                createModal({
                    id: 'editPostModal',
                    title: 'Modifier un poste',
                    modal: 'back-office/editPost'
                }, () => {
                    console.log($('input#postValueEdit').val());
                    $('button#btnEditPost').click(function () {
                        if (($('input#postValueEdit').val() != '') && ($('select#postCategoryEdit').val() != '')) {
                            let _csrf = $('#csrfToken').val();
                            let promptInput = $('input#postValueEdit').val();
                            $.put(`/api/back-office/posts/${row.id}`, {
                                promptInput,
                                _csrf
                            }, () => {
                                let id = $(e.currentTarget).closest('tr').attr('data-id');
                                $('#editPostModal').modal('hide');
                                $(`tr[data-id="${id}"] td`).last().prev().prev().text(promptInput);
                            });
                        }
                        else {
                            if ($('input#postValueEdit').val() == '') {
                                $('input#postValueEdit').addClass('error');
                                setTimeout(function() {
                                    $('input#postValueEdit').removeClass('error');
                                }, 750)
                            }
                            if ($('select#postCategoryEdit').val() == '') {
                                $('select#postCategoryEdit').addClass('error');
                                setTimeout(function() {
                                    $('select#postCategoryEdit').removeClass('error');
                                }, 750)
                            }
                        }
                    });
                });
            },
            'click .remove': (e, value, row, index) => {
                createModal({
                    id: 'removePostModal',
                    title: 'Supprimer un poste',
                    modal: 'back-office/removePost'
                }, () => {
                    let _csrf = $('#csrfToken').val();
                    $('button#btnRemovePost').click(function () {
                        $.delete(`/api/back-office/posts/${row.id}`, {
                            _csrf
                        }, () => {
                            table.bootstrapTable('remove', {
                                field: 'id',
                                values: [row.id]
                            });
                        });
                    });
                });
            }
        };

        table.bootstrapTable({
            toolbar: ".toolbar",
            search: true,
            showToggle: true,
            showColumns: true,
            pagination: true,
            searchAlign: 'left',
            pageSize: 25,
            clickToSelect: true,
            pageList: [10,25,50,100,200,500],
            formatShowingRows: (pageFrom, pageTo, totalRows) => {
                //do nothing here, we don't want to show the text "showing x of y from..."
            },
            formatRecordsPerPage: (pageNumber) => {
                return pageNumber + " rows visible";
            },
            icons: {
                toggle: 'fa fa-th-list',
                columns: 'fa fa-columns',
                detailOpen: 'fa fa-plus-circle',
                detailClose: 'ti-close'
            }
        });

        //activate the tooltips after the data table is initialized
        $('[rel="tooltip"]').tooltip();

        $(window).resize(() => {
            table.bootstrapTable('resetView');
        });
    });
</script>